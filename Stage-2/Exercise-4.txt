arrays

// Ex - 1

is_array = function(input) {
  if(Array.isArray(input)) {
    return true;
  }
  else {
  return false;
  }
}

console.log(is_array('w3resource')); 
console.log(is_array([1, 2, 4, 0]));

// Ex - 2

array_Clone = function(input) {
  return input.slice(0);
}

console.log(array_Clone([1, 2, 4, 0])); 
console.log(array_Clone([1, 2, [4, 0]]));

// Ex - 3

function first(arr,n) {
  var a = [];
  if(n == null) {
    return arr[0];
  }
  else {
    for(var i = 0; i < Math.min(n,arr.length); i++) {
      a[i] = arr[i]; 
    }
  }
  return a;
}

console.log(first([7, 9, 0, -2])); 
console.log(first([],3));
console.log(first([7, 9, 0, -2],3));
console.log(first([7, 9, 0, -2],6));
console.log(first([7, 9, 0, -2],-3));

// Ex - 4

function last(arr,n) {
  var a = [];
  if(n == null) {
    return arr[arr.length-1];
  }
  else {
    return arr.slice(Math.max(arr.length - n, 0)); 
  }
}

console.log(last([7, 9, 0, -2])); 
console.log(last([7, 9, 0, -2],3)); 
console.log(last([7, 9, 0, -2],6));

// Ex - 5

myColor = ["Red", "Green", "White", "Black"];
console.log(myColor.join());
console.log(myColor.join('+'));

// Ex - 6

// Ex - 7

var arr1 = [ 3, 8, 7, 6, 5, -4, 3, 2, 1 ];
console.log(arr1.sort(function(a,b){ return (a-b);}));

// Ex - 8

var arr1 = [3, 'a', 'a', 'a', 2, 3, 'a', 3, 'a', 2, 4, 9, 3];
console.log(arr1.sort());
var total = 0;
var count = 0;
var elem;
for(var i = 0; i < arr1.length; i++) {
  if(arr1[i] == arr1[i+1]) {
    count++;
  }
  else {
    count = 0;
  }
  if(count > total) {
    total = count;
    elem = arr1[i];
  }
}
console.log(elem + " " + eval(total+1));

// Ex - 9

var str = "The Quick Brown Fox";

var UPPER = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
var LOWER = 'abcdefghijklmnopqrstuvwxyz';
var result = [];
  
  for(var x in str) {
    if(UPPER.indexOf(str[x]) !== -1) {
      result.push(str[x].toLowerCase());
    }
    else if(LOWER.indexOf(str[x]) !== -1) {
      result.push(str[x].toUpperCase());
    }
    else {
      result.push(str[x]);
    }
  }
console.log(result.join(''));

// Ex - 10

var a = [[1, 2, 1, 24], [8, 11, 9, 4], [7, 0, 7, 27], [7, 4, 28, 14], [3, 10, 26, 7]];

for(var i in a) {
  console.log("Row " + i);
  for(var j of a[i]) {
    console.log(j);
  }
}

// Ex - 11

sum_sq = function(input) {
  var sum = 0;
  for(var i  of input) {
    sum += Math.pow(i,2);
  }
  return sum;
}

console.log(sum_sq([0,1,2,3,4]));

// Ex - 13

// Ex - 14

var Mynum = [1, 2, 2, 4, 5, 4, 7, 8, 7, 3, 6];
result = removeDuplicate(Mynum);
console.log(result);

function removeDuplicate(input) {
  input.sort();
  for(var i=0;i<input.length;i++) {
    if(input[i] == input[i+1]) {
      input.splice(i,1);
      removeDuplicate(input);
    }
  }
  return input;
}

// Ex - 15

// Ex - 16

function leap_year_range(start, end) {
  var new_array = [];
  for (var i = start; i <= end; i++) {
    var year = test_LeapYear(i);
    if (test_LeapYear(year)) 
    new_array.push(year);
  }
  return new_array;
}

function test_LeapYear(year) {
   if ((year % 4 === 0 && year % 100 !== 0) || (year % 100 === 0 && year % 400 === 0)) {
    return year;
  } else {
     return false;
  }
}

console.log(leap_year_range(2000,2012));

// Ex - 17

function shuffle(arr) {
    var current = arr.length, temp, index;
    while (current > 0) {
        index = Math.floor(Math.random() * current);
        current--;
        temp = arr[current];
        arr[current] = arr[index];
        arr[index] = temp;
    }
    return arr;
}
var myArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
console.log(shuffle(myArray));

// Ex - 18

function binary_Search(items, value){
    var firstIndex  = 0,
        lastIndex   = items.length - 1,
        middleIndex = Math.floor((lastIndex + firstIndex)/2);

    while(items[middleIndex] != value && firstIndex < lastIndex) {
       if (value < items[middleIndex]) {
            lastIndex = middleIndex - 1;
        } 
      else if (value > items[middleIndex]) {
            firstIndex = middleIndex + 1;
        }
        middleIndex = Math.floor((lastIndex + firstIndex)/2);
    }

 return (items[middleIndex] != value) ? -1 : middleIndex;
}
var items = [1, 2, 3, 4, 5, 7, 8, 9];
console.log(binary_Search(items, 1));   
console.log(binary_Search(items, 5));

// Ex - 21

// Ex - 22

function union_arrays (x, y) {
  var obj = {};
  for (var i = x.length-1; i >= 0; -- i)
     obj[x[i]] = x[i];
  for (var i = y.length-1; i >= 0; -- i)
     obj[y[i]] = y[i];
  var res = []
  for (var k in obj) {
      res.push(obj[k]);
  }
  return res;
}

console.log(union_arrays([1, 2, 3], [100, 2, 1, 10]));

// Ex - 23

// Ex - 24

function filter_array(test_array) {
  var index = 0;
  arr_length = test_array.length;
  resIndex = 0,
  result = [];

  while (index < arr_length) {
    var value = test_array[index];
    if (value) {
      result[resIndex++] = value;
    }
    index++;
  }
  return result;
}
console.log(filter_array([NaN, 0, 15, false, -22, '',undefined, 47, null]));

// Ex - 25

var library = [ 
   { author: 'Bill Gates', title: 'The Road Ahead', libraryID: 1254},
   { author: 'Steve Jobs', title: 'Walter Isaacson', libraryID: 4264},
   { author: 'Suzanne Collins', title: 'Mockingjay: The Final Book of The Hunger Games', libraryID: 3245}
   ];

function compare(x,y) 
 {
  if (x.title < y.title)
    return -1;
  if (x.title > y.title)
    return 1;
  return 0;
 }

console.log(library.sort(compare));

// Ex - 26

